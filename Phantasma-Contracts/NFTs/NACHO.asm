
// ********* getName Property ***********
@entry_getName: // 0
	ALIAS r1 $literalexpression95 // 1
	LOAD $literalexpression95 "Nachomen" // 1
	PUSH $literalexpression95 // 13
	JMP @exit_getName // 15
@exit_getName: // 18
RET // 19

// ********* isBurnable Property ***********
@entry_isBurnable: // 20
	ALIAS r1 $literalexpression99 // 21
	LOAD $literalexpression99 true // 21
	PUSH $literalexpression99 // 26
	JMP @exit_isBurnable // 28
@exit_isBurnable: // 31
RET // 32

// ********* isFinite Property ***********
@entry_isFinite: // 33
	ALIAS r1 $literalexpression103 // 34
	LOAD $literalexpression103 true // 34
	PUSH $literalexpression103 // 39
	JMP @exit_isFinite // 41
@exit_isFinite: // 44
RET // 45

// ********* isFungible Property ***********
@entry_isFungible: // 46
	ALIAS r1 $literalexpression107 // 47
	LOAD $literalexpression107 false // 47
	PUSH $literalexpression107 // 52
	JMP @exit_isFungible // 54
@exit_isFungible: // 57
RET // 58

// ********* getMaxSupply Property ***********
@entry_getMaxSupply: // 59
	ALIAS r1 $LUCHADOR_SUPPLY // 60
	LOAD $LUCHADOR_SUPPLY 100000 // 60
	ALIAS r2 $ITEM_SUPPLY // 67
	LOAD $ITEM_SUPPLY 500000 // 67
	ADD $LUCHADOR_SUPPLY $ITEM_SUPPLY r3 // 74
	PUSH r3 // 78
	JMP @exit_getMaxSupply // 80
@exit_getMaxSupply: // 83
RET // 84
// Line 84:		}
// Line 85:	}	

// ********* Initialize Constructor ***********
@entry_constructor: // 85
ALIAS r1 $nexus_protocol_version // 86
// validate protocol version
LOAD r0 "Runtime.Version" // 86
EXTCALL r0 // 105
POP r0 // 107
LOAD $nexus_protocol_version 0 // 109
LT r0 $nexus_protocol_version r0 // 114
JMPNOT r0 @protocol_version_validated // 118
LOAD r0 "Current nexus protocol version should be 0 or more" // 122
THROW r0 // 176
@protocol_version_validated: NOP // 179
ALIAS r1 $_owner // 179
// Line 86:
// Line 87:	constructor (addr:address) {
ALIAS r2 $addr // 179
POP $addr // 179
PUSH $addr // 181
EXTCALL "Address()" // 183
POP $addr // 198
// Line 88:		_owner = addr;
	COPY $addr r3 // 200
	COPY r3 $_owner // 203
// Line 89:		// at least one token series must exist, here we create 2 series
// Line 90:		// they don't have to be created in the constructor though, can be created later
// Line 91:		NFT.createSeries(_owner, $THIS_SYMBOL, LUCHADOR_SERIES, LUCHADOR_SUPPLY, TokenSeries.Unique, luchador);
	ALIAS r3 $methodcallexpression292 // 206
	LOAD r4 0x04076765744E616D6504000000000107746F6B656E4944030E6765744465736372697074696F6E04590000000107746F6B656E4944030B676574496D61676555524C04D30000000107746F6B656E4944030A676574496E666F55524C040E0100000107746F6B656E49440300 // abi // 206
	PUSH r4 // 318
	LOAD r4 0xscript // 320
	PUSH r4 // 655
	ALIAS r4 $literalexpression304 // 657
	LOAD $literalexpression304 0 Enum // 657
	PUSH $literalexpression304 // 665
	ALIAS r4 $LUCHADOR_SUPPLY // 667
	LOAD $LUCHADOR_SUPPLY 100000 // 667
	PUSH $LUCHADOR_SUPPLY // 674
	ALIAS r4 $LUCHADOR_SERIES // 676
	LOAD $LUCHADOR_SERIES 1 // 676
	PUSH $LUCHADOR_SERIES // 681
	ALIAS r4 $literalexpression301 // 683
	LOAD $literalexpression301 "NACHO" // 683
	PUSH $literalexpression301 // 692
	COPY $_owner r4 // 694
	PUSH r4 // 697
	LOAD $methodcallexpression292 "Nexus.CreateTokenSeries" // 699
	EXTCALL $methodcallexpression292 // 726
// Line 92:		NFT.createSeries(_owner, $THIS_SYMBOL, ITEM_SERIES, ITEM_SUPPLY, TokenSeries.Unique, item);
	ALIAS r3 $methodcallexpression307 // 728
	LOAD r4 0x04076765744E616D6504000000000107746F6B656E4944030E6765744465736372697074696F6E04C10000000107746F6B656E4944030B676574496D61676555524C04320100000107746F6B656E4944030A676574496E666F55524C04690100000107746F6B656E49440300 // abi // 728
	PUSH r4 // 840
	LOAD r4 0xscript // 842
	PUSH r4 // 1264
	ALIAS r4 $literalexpression319 // 1266
	LOAD $literalexpression319 0 Enum // 1266
	PUSH $literalexpression319 // 1274
	ALIAS r4 $ITEM_SUPPLY // 1276
	LOAD $ITEM_SUPPLY 500000 // 1276
	PUSH $ITEM_SUPPLY // 1283
	ALIAS r4 $ITEM_SERIES // 1285
	LOAD $ITEM_SERIES 2 // 1285
	PUSH $ITEM_SERIES // 1290
	ALIAS r4 $literalexpression316 // 1292
	LOAD $literalexpression316 "NACHO" // 1292
	PUSH $literalexpression316 // 1301
	COPY $_owner r4 // 1303
	PUSH r4 // 1306
	LOAD $methodcallexpression307 "Nexus.CreateTokenSeries" // 1308
	EXTCALL $methodcallexpression307 // 1335
@exit_constructor: // 1337
LOAD r2 "Data.Set" // 1338
// writing global: _owner
PUSH $_owner // 1350
LOAD r0 "_owner" // 1352
PUSH r0 // 1362
EXTCALL r2 // 1364
RET // 1366
